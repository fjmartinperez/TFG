- name: Clonar una VM desde una plantilla en Proxmox y encenderla
  hosts: localhost
  tasks:
    - name: Clonar VM desde plantilla
      community.general.proxmox_kvm:
        api_host: "{{ lookup('env', 'PROXMOX_API_HOST') }}"
        api_user: "{{ lookup('env', 'PROXMOX_API_USER') }}"
        api_password: "{{ lookup('env', 'PROXMOX_API_PASSWORD') }}"
        validate_certs: false
        node: "proxmox2"               # Nodo donde reside la plantilla
        clone: Almalinux               # Nombre de la plantilla a clonar
        vmid: 106                      # ID de la plantilla existente        
        name: newdeploy                # Nombre inicial
        storage: "nvme"                # Almacenamiento para la VM        
        full: true                     # Clonación completa
        timeout: 240                   # Tiempo de espera
      register: clone_result      

    - name: Obtener el VMID y la IP desde el resultado
      set_fact:
        new_vmid: "{{ clone_result.vmid }}"
        vm_ip: "192.168.0.{{ clone_result.vmid }}"

    - name: Configurar red usando cloud-init
      community.general.proxmox_kvm:
        api_host: "{{ lookup('env', 'PROXMOX_API_HOST') }}"
        api_user: "{{ lookup('env', 'PROXMOX_API_USER') }}"
        api_password: "{{ lookup('env', 'PROXMOX_API_PASSWORD') }}"
        validate_certs: false
        node: "proxmox2"
        vmid: "{{ new_vmid }}"
        cicustom:
          network: |
            version: 2
            ethernets:
              ens18:
                addresses:
                  - "{{ vm_ip }}/24"
                gateway4: 192.168.0.1
                nameservers:
                  addresses:
                    - 8.8.8.8
                    - 8.8.4.4
        update: true
        state: present

    - name: Cambiar el nombre de la VM al finalizar
      community.general.proxmox_kvm:
        api_host: "{{ lookup('env', 'PROXMOX_API_HOST') }}"
        api_user: "{{ lookup('env', 'PROXMOX_API_USER') }}"
        api_password: "{{ lookup('env', 'PROXMOX_API_PASSWORD') }}"
        validate_certs: false
        node: "proxmox2"
        vmid: "{{ new_vmid }}"         # ID de la VM clonada
        name: "server{{ new_vmid }}"   # Nombre final basado en VMID
        update: true                   # Actualizar la configuración
        state: present
      register: update_result

    - name: Encender la máquina virtual
      community.general.proxmox_kvm:
        api_host: "{{ lookup('env', 'PROXMOX_API_HOST') }}"
        api_user: "{{ lookup('env', 'PROXMOX_API_USER') }}"
        api_password: "{{ lookup('env', 'PROXMOX_API_PASSWORD') }}"
        validate_certs: false
        node: "proxmox2"
        vmid: "{{ new_vmid }}"         # ID de la VM clonada
        state: started                 # Encender la máquina

    - name: Esperar 1 minuto a que la VM arranque
      pause:
        minutes: 1

    - name: Cambiar el nombre de la máquina a nivel de SO
      ansible.builtin.shell: |
        hostnamectl set-hostname server{{ new_vmid }}
      vars:
        ansible_user: "{{ lookup('env', 'USERNAME') }}"
        ansible_ssh_pass: "{{ lookup('env', 'PASSWORD') }}"
      delegate_to: "{{ vm_ip }}"
      become: yes

    - name: Mostrar resultados del clon, renombrado y encendido
      debug:
        msg:
          - "Clonación realizada con VMID: {{ new_vmid }}"
          - "VM renombrada a nivel Proxmox: server{{ new_vmid }}"
          - "Nombre del SO cambiado a: server{{ new_vmid }}"
          - "Dirección IP de la máquina: {{ vm_ip }}"