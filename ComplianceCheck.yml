---
- name: Compliance Check for Linux Servers
  hosts: all
  gather_facts: true
  tasks:
    - name: Ensure firewall is installed
      ansible.builtin.dnf:
        name: firewalld
        state: present
      register: firewall_install_result

    - name: Ensure firewall is active
      ansible.builtin.systemd:
        name: firewalld
        state: started
        enabled: true
      register: firewall_status_result
      when: not firewall_install_result.changed or firewall_install_result is succeeded

    - name: Enable EPEL repository
      ansible.builtin.dnf:
        name: epel-release
        state: present

    - name: Update dnf cache
      ansible.builtin.dnf:
        update_cache: true

    - name: Ensure ClamAV is installed
      ansible.builtin.dnf:
        name: clamav
        state: present
      register: clamav_install_result

    - name: Ensure ClamAV service is active
      ansible.builtin.systemd:
        name: clamd@scan
        state: started
        enabled: true
      register: clamav_status_result
      when: not clamav_install_result.changed or clamav_install_result is succeeded

    - name: Check compliance status
      ansible.builtin.set_fact:
        compliance_status: |
          {{
            compliance_status | default([]) +
            [{
              "hostname": inventory_hostname,
              "firewall_installed": firewall_install_result is succeeded,
              "firewall_active": firewall_status_result is succeeded,
              "antivirus_installed": clamav_install_result is succeeded,
              "antivirus_active": clamav_status_result is succeeded
            }]
          }}
      vars:
        compliance_status: []

    - name: Generate lists of compliant and non-compliant servers
      ansible.builtin.set_fact:
        compliant_servers: "{{ compliant_servers | default([]) + [inventory_hostname] }}"
        non_compliant_servers: "{{ non_compliant_servers | default([]) + [inventory_hostname] }}"
      when:
        - compliance_status[-1].firewall_installed and
          compliance_status[-1].firewall_active and
          compliance_status[-1].antivirus_installed and
          compliance_status[-1].antivirus_active
      vars:
        compliant_servers: []
        non_compliant_servers: []

    - name: Save compliance results globally
      ansible.builtin.set_stats:
        data:
          compliance_results: "{{ compliance_status }}"
          compliant_servers: "{{ compliant_servers }}"
          non_compliant_servers: "{{ non_compliant_servers }}"

    - name: Debug compliance results (Optional)
      ansible.builtin.debug:
        msg:
          - "Compliant Servers: {{ compliant_servers }}"
          - "Non-Compliant Servers: {{ non_compliant_servers }}"
          - "Detailed Compliance Results: {{ compliance_status }}"

    - name: Registrar el incidente en Servicenow en caso de que existan no compliance
      servicenow.itsm.incident:
        instance:
          host: https://dev262465.service-now.com # Instancia
          username: "{{ ansible_user }}"          # Usuario de ServiceNow
          password: "{{ ansible_password }}"      # Contraseña de ServiceNow
        state: new
        caller: AAP25_API
        short_description: Revisión automática de servidores no compliance
        description: |
          Se encontraron servidres no compliance:
          {{ non_compliant_servers }}
          Detalle de las acciones realizadas:
          {{ compliance_status }}
      register: snow_incident
      when: non_compliant_servers | length > 0
