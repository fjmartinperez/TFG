---
- name: Compliance Check with Firewall and Rkhunter
  hosts: all
  gather_facts: true
  tasks:
    # Inicializar variables de compliance en localhost
    - name: Initialize compliance variables
      ansible.builtin.set_fact:
        compliant_servers: []
        non_compliant_servers: []
        compliance_results: []
      run_once: true

    # Verificar el firewall
    - name: Ensure firewall is installed
      ansible.builtin.dnf:
        name: firewalld
        state: present
      register: firewall_install_result

    - name: Ensure firewall is active
      ansible.builtin.systemd:
        name: firewalld
        state: started
        enabled: true
      register: firewall_status_result
      when: not firewall_install_result.changed or firewall_install_result is succeeded

    # Instalar y configurar Rkhunter
    - name: Enable EPEL repository
      ansible.builtin.dnf:
        name: epel-release
        state: present

    - name: Ensure Rkhunter is installed
      ansible.builtin.dnf:
        name: rkhunter
        state: present

    - name: Update Rkhunter database
      ansible.builtin.command:
        cmd: rkhunter --update
      register: rkhunter_update_result
      changed_when: false
      failed_when: rkhunter_update_result.rc not in [0, 2]

    - name: Run Rkhunter scan
      ansible.builtin.command:
        cmd: rkhunter --checkall --sk
      register: rkhunter_scan_result
      changed_when: false
      failed_when: rkhunter_scan_result.rc not in [0, 1]

    - name: Parse Rkhunter scan result
      ansible.builtin.set_fact:
        rkhunter_issues: "{{ rkhunter_scan_result.stdout | regex_findall('Warning') | length > 0 }}"

    # Evaluar estado de compliance
    - name: Update global compliance lists
      ansible.builtin.set_fact:
        compliant_servers: "{{ compliant_servers + [inventory_hostname] }}"
        non_compliant_servers: "{{ non_compliant_servers + [inventory_hostname] }}"
      delegate_to: localhost
      when:
        - firewall_install_result is succeeded
        - firewall_status_result is succeeded
        - not rkhunter_issues

    # Guardar resultados de compliance globalmente
    - name: Save compliance results globally
      ansible.builtin.set_stats:
        data:
          compliance_results: "{{ {'compliant_servers': compliant_servers, 'non_compliant_servers': non_compliant_servers} }}"
          compliant_servers: "{{ compliant_servers }}"
          non_compliant_servers: "{{ non_compliant_servers }}"

    # Debug de resultados (opcional)
    - name: Debug compliance results (Optional)
      ansible.builtin.debug:
        msg:
          - "Compliant Servers: {{ compliant_servers }}"
          - "Non-Compliant Servers: {{ non_compliant_servers }}"
          - "Detailed Compliance Results: {{ compliance_results }}"

    # Registrar incidente en ServiceNow si hay servidores no compliance
    - name: Registrar el incidente en ServiceNow si hay servidores no compliance
      servicenow.itsm.incident:
        instance:
          host: https://dev262465.service-now.com # URL de tu instancia de ServiceNow
          username: "{{ ansible_user }}"          # Usuario para autenticación
          password: "{{ ansible_password }}"      # Contraseña para autenticación
        state: new
        caller: AAP25_API
        short_description: Revisión automática de servidores no compliance
        description: |
          Se encontraron servidores no compliance:
          {{ non_compliant_servers }}
          Detalle de las acciones realizadas:
          {{ compliance_results }}
      register: snow_incident
      when: non_compliant_servers | length > 0
