---
- name: Compliance Check for Linux Servers
  hosts: all
  gather_facts: true
  tasks:
    - name: Ensure firewall is installed
      ansible.builtin.dnf:
        name: firewalld
        state: present
      register: firewall_install_result
      ignore_errors: true

    - name: Ensure firewall is active
      ansible.builtin.systemd:
        name: firewalld
        state: started
        enabled: true
      register: firewall_status_result
      ignore_errors: true

    - name: Ensure rkhunter is installed
      ansible.builtin.dnf:
        name: rkhunter
        state: present
      register: rkhunter_install_result
      ignore_errors: true

    - name: Evaluate server compliance
      ansible.builtin.set_fact:
        is_compliant: >-
          {{
            not firewall_install_result is failed and
            not firewall_status_result is failed and
            not rkhunter_install_result is failed
          }}
        compliance_details:
          hostname: "{{ inventory_hostname }}"
          firewall_installed: "{{ not firewall_install_result is failed }}"
          firewall_active: "{{ not firewall_status_result is failed }}"
          rkhunter_installed: "{{ not rkhunter_install_result is failed }}"

    - name: Add non-compliant server to global list
      ansible.builtin.set_stats:
        data:
          non_compliant_servers_global: >-
            {{
              (non_compliant_servers_global | default([])) + [compliance_details]
            }}
      when: not is_compliant

- name: Fail if there are non-compliant servers
  hosts: localhost
  tasks:
    - name: Debug non-compliant servers
      ansible.builtin.debug:
        var: non_compliant_servers_global

    - name: Fail the playbook if non-compliant servers exist
      ansible.builtin.fail:
        msg: >
          Compliance check failed. Non-compliant servers:
          {{ non_compliant_servers_global | to_nice_json }}
      when: non_compliant_servers_global is defined and non_compliant_servers_global | length > 0
