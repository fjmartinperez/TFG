---
- name: Compliance Check for Linux Servers
  hosts: all
  gather_facts: true
  tasks:
    # Verificar el firewall
    - name: Ensure firewall is installed
      ansible.builtin.dnf:
        name: firewalld
        state: present
      register: firewall_install_result

    - name: Ensure firewall is active
      ansible.builtin.systemd:
        name: firewalld
        state: started
        enabled: true
      register: firewall_status_result
      when: not firewall_install_result.changed or firewall_install_result is succeeded

    # Instalar y configurar Rkhunter
    - name: Enable EPEL repository
      ansible.builtin.dnf:
        name: epel-release
        state: present

    - name: Ensure Rkhunter is installed
      ansible.builtin.dnf:
        name: rkhunter
        state: present

    - name: Update Rkhunter database
      ansible.builtin.command:
        cmd: rkhunter --update
      register: rkhunter_update_result
      changed_when: false
      failed_when: rkhunter_update_result.rc not in [0, 2]

    - name: Run Rkhunter scan
      ansible.builtin.command:
        cmd: rkhunter --checkall --sk
      register: rkhunter_scan_result
      changed_when: false
      failed_when: rkhunter_scan_result.rc not in [0, 1]

    - name: Parse Rkhunter scan result
      ansible.builtin.set_fact:
        rkhunter_issues: "{{ rkhunter_scan_result.stdout | regex_findall('Warning') | length > 0 }}"

    # Depuración de valores intermedios
    - name: Debug intermediate results
      ansible.builtin.debug:
        msg:
          - "Firewall installed: {{ firewall_install_result is succeeded }}"
          - "Firewall active: {{ firewall_status_result is succeeded }}"
          - "Rkhunter issues: {{ rkhunter_issues }}"

    # Evaluar estado del servidor
    - name: Check server compliance
      ansible.builtin.set_fact:
        server_compliance: "{{ (firewall_install_result is succeeded) and (firewall_status_result is succeeded) and (not rkhunter_issues) }}"

    - name: Debug server compliance
      ansible.builtin.debug:
        msg: "Server compliance status for {{ inventory_hostname }}: {{ server_compliance }}"

    # Abrir incidente en ServiceNow si el servidor no es compliance
    - name: Open ServiceNow incident if non-compliant
      servicenow.itsm.incident:
        instance:
          host: https://dev262465.service-now.com # URL de tu instancia de ServiceNow
          username: "{{ SNOW_API.username }}"          # Usuario para autenticación
          password: "{{ SNOW_API.password }}"      # Contraseña para autenticación
        state: new
        caller: AAP25_API
        short_description: Revisión de compliance fallida en {{ inventory_hostname }}
        description: |
          El servidor {{ inventory_hostname }} no cumple con los requisitos de compliance:
          - Firewall instalado: {{ firewall_install_result is succeeded }}
          - Firewall activo: {{ firewall_status_result is succeeded }}
          - Rkhunter sin problemas: {{ not rkhunter_issues }}
      when: not server_compliance
